@page "/"

<MudStack AlignItems="AlignItems.Center">
    <MudPaper Class="pa-4">
        <MudImage Src="@Src" Width="400"/>
    </MudPaper>
    <CarouselComponent HunterResponsesNew="HunterResponses"/>
    <PoweredByComponent/>
    @* <TierlistDemoComponent HunterResponses="HunterResponses"/> *@
    <MudButton
        Class="ma-10"
        Color="Color.Primary"
        FullWidth="false"
        Href="auth/register"
        Variant="Variant.Filled">
        Sign Up Now
    </MudButton>
</MudStack>

@code {

    [Inject]
    protected IApiService ApiService { get; set; }

    static string Src => false ? "logo-dark.png" : "logo-light.png";

    List<HunterResponseNew> HunterResponses { get; set; } = new();


    protected override async Task OnParametersSetAsync()
    {
        HunterResponses.Add(await FetchData("a1c7c817-4e59-43b7-9365-09675a149a6f"));
        HunterResponses.Add(await FetchData("6a468761-5bd6-4de0-a0cb-47cb456ac2e0"));
        HunterResponses.Add(await FetchData("8892dc05-867f-4fff-823b-47210a6746bb"));
    }

    async Task<HunterResponseNew> FetchData(string guid)
    {
        var mangaById = await ApiService.GetMangaById("ecchi", guid,
            new QueryParameters
            {
                HasMangadex = true,
                HasMangaUpdates = true,
            });
        return !mangaById.IsError ? mangaById.Value : new();
    }

}