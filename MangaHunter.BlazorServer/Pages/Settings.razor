@page "/users/{Username}/settings"
@using Auth0.ManagementApi.Models
@inject ISnackbar Snackbar
@inject IManagementApiService ManagementApiService
@inject NavigationManagerHandler NavigationManagerHandler
<PageHeader Title="Settings"/>

<MudStack Row="true" Class="my-16">
    <MudImage Alt="catppuccin" Class="mr-1" Height="125" Src="https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/logos/exports/1544x1544_circle.png"/>
    <MudSelect Label="Choose a theme : " AnchorOrigin="Origin.BottomCenter" ValueChanged="OnThemeChange" T="Palette">
        <MudSelectItem Value="Palettes.Latte">
            <MudImage Alt="sunflower" Class="mr-1" Height="14" Src="https://github.githubassets.com/images/icons/emoji/unicode/1f33b.png"/> Latte
        </MudSelectItem>
        <MudSelectItem Value="Palettes.Frappe">
            <MudImage Alt="potted_plant" Class="mr-1" Height="14" Src="https://github.githubassets.com/images/icons/emoji/unicode/1fab4.png"/> Frapp√©
        </MudSelectItem>
        <MudSelectItem Value="Palettes.Macchiato">
            <MudImage Alt="hibiscus" Class="mr-1" Height="14" Src="https://github.githubassets.com/images/icons/emoji/unicode/1f33a.png"/> Macchiato
        </MudSelectItem>
        <MudSelectItem Value="Palettes.Mocha">
            <MudImage Alt="herb" Class="mr-1" Height="14" Src="https://github.githubassets.com/images/icons/emoji/unicode/1f33f.png"/> Mocha
        </MudSelectItem>
    </MudSelect>
</MudStack>
<MudStack Row="true" Class="my-2">
    <MudSpacer/>
    <MudButton StartIcon="@Icons.Material.Filled.Save" OnClick="UpdateUser">Update</MudButton>
</MudStack>

@code {

    [Parameter]
    public string? Username { get; set; }

    [CascadingParameter]
    protected UserState UserState { get; set; }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (UserState is not {IsAuthenticated:true})
        {
            NavigationManagerHandler.NavigateTo("/dashboard");
        }

        return base.OnAfterRenderAsync(firstRender);
    }

    private void OnThemeChange(Palette palette)
    {
        UserState.Theme.Palette = palette;
    }

    private async Task UpdateUser()
    {
        var result = await ManagementApiService.UpdateUser(UserState.UserId, new UserUpdateRequest
        {
            UserMetadata = new UserMetaData
            {
                PaletteName = Palettes.GetStringFromPalette(UserState.Theme.Palette)
            }
        });
        if (!result.IsError)
        {
            Snackbar.Add("Good", Severity.Success);
            NavigationManagerHandler.Reload();
        }
        else
        {
            Snackbar.Add("Bad", Severity.Error);
        }
    }

}