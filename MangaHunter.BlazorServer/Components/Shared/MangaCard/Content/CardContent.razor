@using ImgProxy

<MudCardMedia Image="@ImgProxy("")"/>
<MudCardContent>
    <MudStack Row="true">
        <StatusContainer MangadexNew="HunterResponse.MangadexDto"/>
        @if (!IsSearchResult)
        {
            <ReadingStatusContainer ReadingStatus="HunterResponse.HunterDto.Status"/>
        }
        <MudSpacer/>
        <TagsMenu MangadexNew="HunterResponse.MangadexDto"/>
    </MudStack>
    <MudDivider Class="ma-2"/>
    @if (!IsSearchResult)
    {
        <MangaUpdatesContainer
            MangadexId="@HunterResponse.HunterDto.MangadexId.ToString()"
            MangaUpdatesDto="HunterResponse.MangaUpdatesDto"
            Username="@Username"/>
        <RssContainer Username="@Username" MangadexId="@HunterResponse.HunterDto.MangadexId.ToString()"/>
    }
    else
    {
        <MudExpansionPanel Text="Description">
            @{
                var description = HunterResponse.MangadexDto.Data.Attributes.Description.ToString();
                var indexOf = description.IndexOf("---", StringComparison.Ordinal);
                var index = indexOf is -1 ? description.Length : indexOf;
            }
            <MudText>@description[.. index]</MudText>
        </MudExpansionPanel>
    }
</MudCardContent>

@code{

    [CascadingParameter]
    protected UserState UserState { get; set; } = new();

    [Parameter]
    public HunterResponseNew HunterResponse { get; set; }

    [Parameter]
    public bool IsSearchResult { get; set; }

    private string Username => string.IsNullOrEmpty(UserState.Username) ? HunterResponse.HunterDto?.Username! : UserState.Username;

        const string salt = "68656C6C6F";
        const string key = "736563726574";

    private string ImgProxy(string? src) => ImgProxyBuilder.New
    // .WithEndpoint("https://cdn.mangahunter.org")
        .WithEndpoint("http://localhost:8080")
        .WithCredentials(key, salt)
        .Build(src, encode: true);

}