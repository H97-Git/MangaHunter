@inject IApiService ApiService
@if (MangaUpdatesDto is not null && !string.IsNullOrEmpty(MangaUpdatesDto.Status))
{
    var mangaUpdateStatusLines = MangaUpdatesDto.Status.Split("<BR>");
    <MudText Typo="@Typo.body2" Align="Align.Center">@mangaUpdateStatusLines.First()</MudText>
}
else
{
    <MudText Typo="@Typo.body2" Align="Align.Center">N/A</MudText>
}

@code {

    [Parameter]
    public string Username { get; set; } //This is cheating btw;

    [Parameter]
    public string MangadexId { get; set; }

    [Parameter]
    public MangaUpdatesDto? MangaUpdatesDto { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (MangaUpdatesDto is null)
        {
            await FetchData();
        }
    }

    private async Task FetchData()
    {
        var hunterResponse = await ApiService.GetMangaById(Username, MangadexId, new QueryParameters
        {
            HasMangaUpdates = true
        });

        if (!hunterResponse.IsError)
        {
            MangaUpdatesDto = new MangaUpdatesDto(); // hunterResponse.Value.MangaUpdatesDto;
        }
    }

}