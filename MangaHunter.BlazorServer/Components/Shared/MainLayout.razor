@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ProtectedLocalStorage ProtectedLocalStorage
@inject NavigationManagerHandler NavigationManagerHandler
<MudThemeProvider Theme="_theme"/>
<MudSnackbarProvider/>
<MudDialogProvider/>
<CascadingValue Value="@UserState">
    <MudLayout>

        <AppBar ChangeTheme="ChangeTheme"/>
        <MudMainContent Style="padding-top: 30px">
            <MudContainer>
                @Body
            </MudContainer>
            <Particles/>
        </MudMainContent>
    </MudLayout>
</CascadingValue>

@code{
    private UserState UserState { get; } = new();

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = state.User;
        if (user.Identity is {IsAuthenticated:true})
        {
            UserState.LogIn(state.User.Claims.ToList());
            if (!UserState.IsEmailVerified)
            {
                var returnUri = QueryHelpers.AddQueryString("auth/logout", "returnUrl", "/check_email");
                NavigationManagerHandler.NavigateTo(returnUri);
            }
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var result = await ProtectedLocalStorage.GetAsync<string>("theme");
        if (result.Success && result.Value != null)
        {
            await ChangeTheme(result.Value);
        }
    }

    private async Task ChangeTheme(string theme)
    {
        _theme.Palette = theme switch
        {
            "Latte" => LattePalette,
            "Frappé" => FrappePalette,
            "Macchiato" => MacchiatoPalette,
            "Mocha" => MochaPalette,
            _ => LattePalette
            };
        await ProtectedLocalStorage.SetAsync("theme", theme);
    }

    private readonly MudTheme _theme = new()
    {
        LayoutProperties = new LayoutProperties
        {
            DefaultBorderRadius = "12px",
            AppbarHeight = "60px",
        },
        Typography = new Typography
        {
            Default = new Default {FontFamily = new[] {"Montserrat", "Ubuntu", "Roboto"}, FontSize = "0.9rem",}
        },
        Palette = LattePalette,
    };

    private static Palette LattePalette { get; } = new()
    {
        Primary = "#1e66f5",
        Secondary = "#ea76cb",
        Tertiary = "#179299",
        Surface = "#dce0e8",
        Background = "#eff1f5",
        BackgroundGrey = "#ccd0da", // MangaUpdateTable Scan Groups
        AppbarBackground = "#1e66f5",
        TextPrimary = "#4c4f69",
        Info = "#7287fd",
        Success = "#40a02b",
        Warning = "#fe640b",
        Error = "#e64553",
    };

    private static Palette FrappePalette { get; } = new()
    {
        Primary = "#8caaee",
        Secondary = "#f4b8e4",
        Tertiary = "#81c8be",
        Surface = "#292c3c",
        Background = "#303446",
        BackgroundGrey = "#ccd0da", // MangaUpdateTable Scan Groups
        AppbarBackground = "#8caaee",
        TextPrimary = "#c6d0f5",
        Info = "#babbf1",
        Success = "#a6d189",
        Warning = "#ef9f76",
        Error = "#ea999c",
    };

    private static Palette MacchiatoPalette { get; } = new()
    {
        Primary = "#8aadf4",
        Secondary = "#f5bde6",
        Tertiary = "#8bd5ca",
        Surface = "#1e2030",
        Background = "#24273a",
        BackgroundGrey = "#ccd0da", // MangaUpdateTable Scan Groups
        AppbarBackground = "#8aadf4",
        TextPrimary = "#cad3f5",
        Info = "#b7bdf8",
        Success = "#a6da95",
        Warning = "#f5a97f",
        Error = "#ee99a0",
    };

    private Palette MochaPalette { get; } = new()
    {
        Primary = "#89b4fa",
        Secondary = "#f5c2e7",
        Tertiary = "#94e2d5",
        Surface = "#181825",
        Background = "#1e1e2e",
        BackgroundGrey = "#ccd0da", // MangaUpdateTable Scan Groups
        AppbarBackground = "#89b4fa",
        TextPrimary = "#cdd6f4",
        Info = "#b4befe",
        Success = "#a6e3a1",
        Warning = "#fab387",
        Error = "#eba0ac",
    };

}